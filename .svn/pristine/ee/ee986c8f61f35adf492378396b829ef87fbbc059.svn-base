/*
 ******************************************************************************
 * Copyright (C) 2007, International Business Machines Corporation and   *
 * others. All Rights Reserved.                                               *
 ******************************************************************************
 */

// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/8/10 10:24 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace IBM.ICU.Impl.Duration {
	
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// Formats a Period, such as '2 hours 23 minutes'. The Period defines the fields
	/// to format and their values, and the formatter defines how to format them.
	/// <p>
	/// PeriodFormatters are immutable.
	/// <p>
	/// PeriodFormatter can be instantiated using a PeriodFormatterFactory.
	/// </summary>
	///
	/// <seealso cref="T:IBM.ICU.Impl.Duration.Period"/>
	/// <seealso cref="T:IBM.ICU.Impl.Duration.PeriodBuilder"/>
	/// <seealso cref="T:IBM.ICU.Impl.Duration.PeriodFormatterFactory"/>
	public interface PeriodFormatter {
	    /// <summary>
	    /// Format a Period.
	    /// </summary>
	    ///
	    /// <param name="ts">the Period to format</param>
	    /// <returns>the formatted time</returns>
	    String Format(Period period);
	
	    /// <summary>
	    /// Return a new PeriodFormatter with the same customizations but using data
	    /// for a new locale. Some locales impose limits on the fields that can be
	    /// directly formatter.
	    /// </summary>
	    ///
	    /// <param name="localeName">the name of the new locale</param>
	    /// <returns>a new formatter for the given locale</returns>
	    PeriodFormatter WithLocale(String localeName);
	}
}
