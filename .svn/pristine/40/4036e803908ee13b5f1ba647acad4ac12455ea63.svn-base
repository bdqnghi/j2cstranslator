/*
 *******************************************************************************
 * Copyright (C) 2007, International Business Machines Corporation and         *
 * others. All Rights Reserved.                                                *
 *******************************************************************************
 */
// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/2/10 11:48 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace IBM.ICU.Util {
	
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// <c>InitialTimeZoneRule</c> represents a time zone rule representing a
	/// time zone effective from the beginning and has no actual start times.
	/// </summary>
	///
	/// @draft ICU 3.8
	/// @provisional This API might change or be removed in a future release.
	public class InitialTimeZoneRule : TimeZoneRule {
	
	    private const long serialVersionUID = 1876594993064051206L;
	
	    /// <summary>
	    /// Constructs a <c>InitialTimeZoneRule</c> with the name, the GMT
	    /// offset of its standard time and the amount of daylight saving offset
	    /// adjustment.
	    /// </summary>
	    ///
	    /// <param name="name">The time zone name.</param>
	    /// <param name="rawOffset">The UTC offset of its standard time in milliseconds.</param>
	    /// <param name="dstSavings">The amount of daylight saving offset adjustment inmilliseconds. If this ia a rule for standard time, the valueof this argument is 0.</param>
	    /// @draft ICU 3.8
	    /// @provisional This API might change or be removed in a future release.
	    public InitialTimeZoneRule(String name, int rawOffset, int dstSavings) : base(name, rawOffset, dstSavings) {
	    }
	
	    /// <summary>
	    /// 
	    /// </summary>
	    ///
	    /// @draft ICU 3.8
	    /// @provisional This API might change or be removed in a future release.
	    public override bool IsEquivalentTo(TimeZoneRule other) {
	        if (other  is  InitialTimeZoneRule) {
	            return base.IsEquivalentTo(other);
	        }
	        return false;
	    }
	
	    /// <summary>
	    /// 
	    /// </summary>
	    ///
	    /// @draft ICU 3.8
	    /// @provisional This API might change or be removed in a future release.
	    public override DateTime GetFinalStart(int prevRawOffset, int prevDSTSavings) {
	        // No start time available
	        return default(DateTime);
	    }
	
	    /// <summary>
	    /// 
	    /// </summary>
	    ///
	    /// @draft ICU 3.8
	    /// @provisional This API might change or be removed in a future release.
	    public override DateTime GetFirstStart(int prevRawOffset, int prevDSTSavings) {
	        // No start time available
            return default(DateTime);
	    }
	
	    /// <summary>
	    /// 
	    /// </summary>
	    ///
	    /// @draft ICU 3.8
	    /// @provisional This API might change or be removed in a future release.
	    public override DateTime GetNextStart(long bs, int prevRawOffset, int prevDSTSavings,
	            bool inclusive) {
	        // No start time available
                    return default(DateTime);
	    }
	
	    /// <summary>
	    /// 
	    /// </summary>
	    ///
	    /// @draft ICU 3.8
	    /// @provisional This API might change or be removed in a future release.
	    public override DateTime GetPreviousStart(long bs, int prevRawOffset,
	            int prevDSTSavings, bool inclusive) {
	        // No start time available
                    return default(DateTime);
	    }
	
	    /// <summary>
	    /// 
	    /// </summary>
	    ///
	    /// @draft ICU 3.8
	    /// @provisional This API might change or be removed in a future release.
	    public override bool IsTransitionRule() {
	        return false;
	    }
	}
}
