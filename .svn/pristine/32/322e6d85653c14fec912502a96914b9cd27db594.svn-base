/*
 ******************************************************************************
 * Copyright (C) 1996-2007, International Business Machines Corporation and   *
 * others. All Rights Reserved.                                               *
 ******************************************************************************
 */

// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/2/10 2:05 PM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace IBM.ICU.Lang {
	
	using IBM.ICU.Impl;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// Class enabling iteration of the codepoints according to their types. Result
	/// of each iteration contains the interval of codepoints that have the same
	/// type. Example of use:<br>
	/// <pre>
	/// RangeValueIterator iterator = UCharacter.getTypeIterator();
	/// RangeValueIterator.Element element = new RangeValueIterator.Element();
	/// while (iterator.next(element)) {
	/// System.out.println(&quot;Codepoint \\u&quot; + Integer.toHexString(element.start)
	/// + &quot; to codepoint \\u&quot; + Integer.toHexString(element.limit - 1)
	/// + &quot; has the character type &quot; + element.value);
	/// }
	/// </pre>
	/// </summary>
	///
	/// <seealso cref="null"/>
	internal class UCharacterTypeIterator : TrieIterator {
	    // protected constructor ---------------------------------------------
	
	    /// <summary>
	    /// TrieEnumeration constructor
	    /// </summary>
	    ///
	    /// <param name="property">the unicode character properties to be used</param>
	    /// @draft 2.1
	    protected internal UCharacterTypeIterator(UCharacterProperty property) : base(property.m_trie_) {
	    }
	
	    // protected methods ----------------------------------------------
	
	    /// <summary>
	    /// Called by nextElement() to extracts a 32 bit value from a trie value used
	    /// for comparison. This method is to be overwritten if special manipulation
	    /// is to be done to retrieve a relevant comparison. The default function is
	    /// to return the value as it is.
	    /// </summary>
	    ///
	    /// <param name="value">a value from the trie</param>
	    /// <returns>extracted value</returns>
	    protected internal override int Extract(int value_ren) {
	        return value_ren & IBM.ICU.Impl.UCharacterProperty.TYPE_MASK;
	    }
	}}
