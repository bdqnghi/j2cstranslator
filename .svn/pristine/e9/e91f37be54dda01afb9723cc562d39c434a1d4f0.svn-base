/*
 *   Copyright (C) 2007, International Business Machines
 *   Corporation and others.  All Rights Reserved.
 */

// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/2/10 11:47 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace IBM.ICU.Util {
	
	using IBM.ICU.Impl;
     using System;
     using ILOG.J2CsMapping.Util;
     using System.Resources;
	
	internal class CalendarServiceShim : Calendar.CalendarShim {
	
	    internal override Locale[] GetAvailableLocales() {
	        if (service.IsDefault()) {
	            return IBM.ICU.Impl.ICUResourceBundle
	                    .GetAvailableLocales(IBM.ICU.Impl.ICUResourceBundle.ICU_BASE_NAME);
	        }
	        return service.GetAvailableLocales();
	    }
	
	    internal override ULocale[] GetAvailableULocales() {
	        if (service.IsDefault()) {
	            return IBM.ICU.Impl.ICUResourceBundle
	                    .GetAvailableULocales(IBM.ICU.Impl.ICUResourceBundle.ICU_BASE_NAME);
	        }
	        return service.GetAvailableULocales();
	    }
	
	    private sealed class CalFactory : IBM.ICU.Impl.ICULocaleService.LocaleKeyFactory  {
	        private IBM.ICU.Util.Calendar.CalendarFactory  delegat0;
	
	        internal CalFactory(IBM.ICU.Util.Calendar.CalendarFactory  delegat0) : base((delegat0.Visible())?IBM.ICU.Impl.ICULocaleService.LocaleKeyFactory.VISIBLE:IBM.ICU.Impl.ICULocaleService.LocaleKeyFactory.INVISIBLE) {
	            this.delegat0 = delegat0;
	        }
	
	        public override Object Create(IBM.ICU.Impl.ICUService.Key  key, ICUService service) {
	            if (HandlesKey(key)) {
	                IBM.ICU.Impl.ICULocaleService.LocaleKey  lkey = (IBM.ICU.Impl.ICULocaleService.LocaleKey ) key;
	                ULocale loc = lkey.CanonicalLocale();
	                Object result = delegat0.CreateCalendar(loc);
	                if (result == null) {
	                    result = service.GetKey(key, null, this);
	                }
	                return result;
	            }
	            return null;
	        }
	
	        protected internal override ILOG.J2CsMapping.Collections.ISet GetSupportedIDs() {
	            return delegat0.GetSupportedLocaleNames();
	        }
	    }
	
	    internal override Calendar CreateInstance(ULocale desiredLocale) {
	        ULocale[] actualLoc = new ULocale[1];
	        if (desiredLocale.Equals(IBM.ICU.Util.ULocale.ROOT)) {
	            desiredLocale = IBM.ICU.Util.ULocale.ROOT;
	        }
	        Calendar cal = (Calendar) service.Get(desiredLocale, actualLoc);
	        if (cal == null) {
	            throw new MissingManifestResourceException("Unable to construct Calendar");
	        }
	        cal = (Calendar) cal.Clone();
	
	        /*
	         * !!! TODO !!! actualLoc returned by service is not properly set. When
	         * this Calendar object is being created, cal.setLocale is called and
	         * proper actual locale is set at that time. Revisit this later.
	         * -yoshito
	         */
	        /*
	         * ULocale uloc = actualLoc[0]; cal.setLocale(uloc, uloc); // service
	         * make no distinction between actual and valid
	         */
	        return cal;
	    }
	
	    internal override Object RegisterFactory(IBM.ICU.Util.Calendar.CalendarFactory  factory) {
	        return service.RegisterFactory(new CalendarServiceShim.CalFactory (factory));
	    }
	
	    internal override bool Unregister(Object k) {
	        return service.UnregisterFactory((IBM.ICU.Impl.ICUService.Factory ) k);
	    }
	
	    private class CalService : ICULocaleService {
	        internal CalService() : base("Calendar") {
	            this.RegisterFactory(new IBM.ICU.Util.CalendarServiceShim.CalService.RBCalendarFactory ());
	            MarkDefault();
	        }
	
	        internal class RBCalendarFactory : IBM.ICU.Impl.ICULocaleService.ICUResourceBundleFactory  {
	            protected internal override Object HandleCreate(ULocale loc, int kind,
	                    ICUService sercice) {
	                return IBM.ICU.Util.Calendar.CreateInstance(loc);
	            }
	        }
	    }
	
	    private static ICULocaleService service = new CalendarServiceShim.CalService ();
	}
}
