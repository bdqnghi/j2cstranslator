/*
 *******************************************************************************
 * Copyright (C) 2007, International Business Machines Corporation and         *
 * others. All Rights Reserved.                                                *
 *******************************************************************************
 */
// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/13/10 4:01 PM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace IBM.ICU.Charset {
	
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	public class DebugUtilities {
	
	    /// <summary>
	    /// Count enum types
	    /// </summary>
	    ///
	    /// <returns>the number of enum types available, starting at 0</returns>
	    public static int TypeCount() {
	        return DebugUtilitiesData.TYPES.Length;
	    }
	
	    /// <summary>
	    /// Fetch the name of a particular type of enum
	    /// </summary>
	    ///
	    /// <param name="type">the enum type</param>
	    /// <returns>the name of the enum</returns>
	    public static String TypeString(int type) {
	        return EnumString(IBM.ICU.Charset.DebugUtilitiesData.UDebugEnumType, type);
	    }
	
	    /// <summary>
	    /// Count the number of available enum values for an item, from 0
	    /// </summary>
	    ///
	    /// <param name="type">which enum to look up, such asDebugUtilitiesData.UCalendarDateFields</param>
	    /// <returns>the number of available enum values</returns>
	    public static int EnumCount(int type) {
	        return IBM.ICU.Charset.DebugUtilitiesData.NAMES[type].Length;
	    }
	
	    /// <summary>
	    /// Fetch the name of an enum
	    /// </summary>
	    ///
	    /// <param name="type">which enum to look up, such asDebugUtilitiesData.UCalendarDateFields</param>
	    /// <param name="field">which enum value to look up</param>
	    /// <returns>the found name. Will throw an exception on out of bounds.</returns>
	    public static String EnumString(int type, int field) {
	        return IBM.ICU.Charset.DebugUtilitiesData.NAMES[type][field];
	    }
	
	    /// <summary>
	    /// Lookup an enum by string
	    /// </summary>
	    ///
	    /// <param name="type">which enum to look up, such asDebugUtilitiesData.UCalendarDateFields</param>
	    /// <param name="string">the string to search for</param>
	    /// <returns>the found enum value, or -1 if not found</returns>
	    public static int EnumByString(int type, String str0) {
	        for (int j = 0; j < IBM.ICU.Charset.DebugUtilitiesData.NAMES[type].Length; j++) {
	            if (str0.Equals(IBM.ICU.Charset.DebugUtilitiesData.NAMES[type][j])) {
	                return j;
	            }
	        }
	        return -1;
	    }
	
	    /// <exclude/>
	    /// <summary>
	    /// for consistency checking
	    /// </summary>
	    ///
	    /// <param name="type">the type of enum</param>
	    /// <returns>the expected ordinal value (should be equal to "field")</returns>
	    public static int EnumArrayValue(int type, int field) {
	        return IBM.ICU.Charset.DebugUtilitiesData.VALUES[type][field];
	    }
	
	}
}
