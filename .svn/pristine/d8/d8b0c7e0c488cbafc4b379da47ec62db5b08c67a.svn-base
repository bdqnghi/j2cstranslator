/*
 ******************************************************************************
 * Copyright (C) 2007, International Business Machines Corporation and   *
 * others. All Rights Reserved.                                               *
 ******************************************************************************
 */

// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/8/10 10:24 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace IBM.ICU.Impl.Duration {
	
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// Factory used to construct DurationFormatters. Formatters are immutable once
	/// created.
	/// <p>
	/// Setters on the factory mutate the factory and return it, for chaining.
	/// </summary>
	///
	public interface DurationFormatterFactory {
	
	    /// <summary>
	    /// Set the period formatter used by the factory. New formatters created with
	    /// this factory will use the given period formatter.
	    /// </summary>
	    ///
	    /// <param name="builder">the builder to use</param>
	    /// <returns>this DurationFormatterFactory</returns>
	    DurationFormatterFactory SetPeriodFormatter(PeriodFormatter formatter);
	
	    /// <summary>
	    /// Set the builder used by the factory. New formatters created with this
	    /// factory will use the given locale.
	    /// </summary>
	    ///
	    /// <param name="builder">the builder to use</param>
	    /// <returns>this DurationFormatterFactory</returns>
	    DurationFormatterFactory SetPeriodBuilder(PeriodBuilder builder);
	
	    /// <summary>
	    /// Set a fallback formatter for durations over a given limit.
	    /// </summary>
	    ///
	    /// <param name="fallback">the fallback formatter to use, or null</param>
	    /// <returns>this DurationFormatterFactory</returns>
	    DurationFormatterFactory SetFallback(DateFormatter fallback);
	
	    /// <summary>
	    /// Set a fallback limit for durations over a given limit.
	    /// </summary>
	    ///
	    /// <param name="fallbackLimit">the fallback limit to use, or 0 if none is desired.</param>
	    /// <returns>this DurationFormatterFactory</returns>
	    DurationFormatterFactory SetFallbackLimit(long fallbackLimit);
	
	    /// <summary>
	    /// Set the name of the locale that will be used when creating new
	    /// formatters.
	    /// </summary>
	    ///
	    /// <param name="localeName">the name of the Locale</param>
	    /// <returns>this DurationFormatterFactory</returns>
	    DurationFormatterFactory SetLocale(String localeName);
	
	    /// <summary>
	    /// Set the name of the locale that will be used when creating new
	    /// formatters.
	    /// </summary>
	    ///
	    /// <param name="localeName">the name of the Locale</param>
	    /// <returns>this DurationFormatterFactory</returns>
        DurationFormatterFactory SetTimeZone(IBM.ICU.Util.TimeZone timeZone);
	
	    /// <summary>
	    /// Return a formatter based on this factory's current settings.
	    /// </summary>
	    ///
	    /// <returns>a DurationFormatter</returns>
	    DurationFormatter GetFormatter();
	}
}
