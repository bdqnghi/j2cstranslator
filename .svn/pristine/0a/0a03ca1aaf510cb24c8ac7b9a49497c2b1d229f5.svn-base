// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/13/10 4:01 PM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (C) 2001-2004, International Business Machines Corporation and    
/// others. All Rights Reserved.                                                
/// </summary>
///
namespace IBM.ICU.Charset
{

    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.IO;
    using System.Runtime.CompilerServices;

    public class ChineseTestCase : TestCase
    {

        /// <summary>
        /// Initialize an object using a Julian day number and the corresponding
        /// fields for the calendar being tested.
        /// </summary>
        ///
        /// <param name="era">the ERA field of tested calendar on the given Julian day</param>
        /// <param name="year">the YEAR field of tested calendar on the given Julian day</param>
        /// <param name="month">the MONTH (1-based) field of tested calendar on the givenJulian day</param>
        /// <param name="isLeapMonth">if true, treat month as a leap month</param>
        /// <param name="dayOfMonth">the DAY_OF_MONTH field of tested calendar on the given Julianday</param>
        /// <param name="dayOfWeek">the DAY_OF_WEEK field of tested calendar on given Julian day</param>
        public ChineseTestCase(double julian, int era, int year, int month,
                bool isLeapMonth, int dayOfMonth, int dayOfWeek)
        {

            SetTime(new DateTime((IBM.ICU.Charset.TestCase.JULIAN_EPOCH + (long)(IBM.ICU.Charset.TestCase.ONE_DAY * julian)) * 10000));

            Set(IBM.ICU.Util.Calendar.ERA, era);
            Set(IBM.ICU.Util.Calendar.YEAR, year);
            Set(IBM.ICU.Util.Calendar.MONTH, month - 1);
            Set(IBM.ICU.Util.ChineseCalendar.IS_LEAP_MONTH, (isLeapMonth) ? 1 : 0);
            Set(IBM.ICU.Util.Calendar.DAY_OF_MONTH, dayOfMonth);
            Set(IBM.ICU.Util.Calendar.DAY_OF_WEEK, dayOfWeek);
        }

        /// <summary>
        /// Return a String representation of this test case's time.
        /// </summary>
        ///
        public override String ToString()
        {
            return IBM.ICU.Charset.TestCase.DowToString(Get(IBM.ICU.Util.Calendar.DAY_OF_WEEK)) + Get(IBM.ICU.Util.Calendar.YEAR)
                    + "of" + Get(IBM.ICU.Util.Calendar.ERA) + "/" + (Get(IBM.ICU.Util.Calendar.MONTH) + 1)
                    + ((Get(IBM.ICU.Util.ChineseCalendar.IS_LEAP_MONTH) == 1) ? "(leap)" : "")
                    + "/" + Get(IBM.ICU.Util.Calendar.DAY_OF_MONTH);
        }
    }
}
