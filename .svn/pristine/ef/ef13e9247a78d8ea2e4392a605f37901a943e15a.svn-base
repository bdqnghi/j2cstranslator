/*
 ******************************************************************************
 * Copyright (C) 2007, International Business Machines Corporation and   *
 * others. All Rights Reserved.                                               *
 ******************************************************************************
 */

// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/8/10 10:24 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace IBM.ICU.Impl.Duration.Impl {
	
	using IBM.ICU.Impl.Duration;	
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Globalization;
	using System.IO;
	using System.Runtime.CompilerServices;
     using ILOG.J2CsMapping.Util;
     using IBM.ICU.Text;
	
	/// <summary>
	/// A DateFormatter that formats the requested date fields.
	/// </summary>
	///
	public class YMDDateFormatter : DateFormatter {
	    private String requestedFields;
	
	    private String localeName;

        private IBM.ICU.Util.TimeZone timeZone;
	
	    private IBM.ICU.Text.SimpleDateFormat df; // cache
	
	    /// <summary>
	    /// Creates a new formatter that formats the requested fields. The formatter
	    /// defaults to the current locale and time zone.
	    /// </summary>
	    ///
	    /// <param name="requestedFields_0">the requested fields</param>
	    public YMDDateFormatter(String requestedFields_0) : this(requestedFields_0, Locale.GetDefault().ToString(), IBM.ICU.Util.TimeZone.GetDefault()) {
	    }
	
	    /// <summary>
	    /// Creates a new formatter that formats the requested fields using the
	    /// provided locale and time zone.
	    /// </summary>
	    ///
	    /// <param name="requestedFields_0">the requested fields</param>
	    /// <param name="localeName_1">the locale to use</param>
	    /// <param name="timeZone_2">the time zone to use</param>
	    public YMDDateFormatter(String requestedFields_0, String localeName_1,
                IBM.ICU.Util.TimeZone timeZone_2)
        {
	        this.requestedFields = requestedFields_0;
	        this.localeName = localeName_1;
	        this.timeZone = timeZone_2;
	
	        Locale locale = IBM.ICU.Impl.Duration.Impl.Utils.LocaleFromString(localeName_1);
	        this.df = new SimpleDateFormat("yyyy/mm/dd", locale);
	        this.df.SetTimeZone(timeZone_2);
	    }
	
	    /// <summary>
	    /// Returns a string representing the formatted date.
	    /// </summary>
	    ///
	    /// <param name="date">the date in milliseconds</param>
	    public virtual String Format(long date) {
	        return Format(new DateTime((date)*10000));
	    }
	
	    /// <summary>
	    /// Returns a string representing the formatted date.
	    /// </summary>
	    ///
	    /// <param name="date">the date</param>
	    public virtual String Format(DateTime date) {
	         lock (this) {
	                    if (df == null) {
	                        // ignores requested fields
	                        // todo: make this really work
	                    }
	                }
	        return df.Format(date);
	    }
	
	    /// <summary>
	    /// Returns a version of this formatter customized to the provided locale.
	    /// </summary>
	    ///
	    public virtual DateFormatter WithLocale(String localeName_0) {
	        if (!localeName_0.Equals(this.localeName)) {
	            return new YMDDateFormatter(requestedFields, localeName_0, timeZone);
	        }
	        return this;
	    }
	
	    /// <summary>
	    /// Returns a version of this formatter customized to the provided time zone.
	    /// </summary>
	    ///
        public virtual DateFormatter WithTimeZone(IBM.ICU.Util.TimeZone timeZone_0)
        {
	        if (!timeZone_0.Equals(this.timeZone)) {
	            return new YMDDateFormatter(requestedFields, localeName, timeZone_0);
	        }
	        return this;
	    }
	}
}
