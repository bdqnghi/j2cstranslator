/*
 *******************************************************************************
 * Copyright (C) 1996-2004, International Business Machines Corporation and    *
 * others. All Rights Reserved.                                                *
 *******************************************************************************
 */
// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/2/10 11:30 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace IBM.ICU.Text {
	
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// A transliterator that removes characters. This is useful in conjunction with
	/// a filter.
	/// </summary>
	///
	internal class RemoveTransliterator : Transliterator {
	
	    public sealed class Anonymous_C0 : Transliterator.Factory {
	        public Transliterator GetInstance(String ID) {
	            return new RemoveTransliterator();
	        }
	    }
	
	    /// <summary>
	    /// ID for this transliterator.
	    /// </summary>
	    ///
	    private static String _ID = "Any-Remove";
	
	    /// <summary>
	    /// System registration hook.
	    /// </summary>
	    ///
	    static internal void Register() {
	        IBM.ICU.Text.Transliterator.RegisterFactory(_ID, new RemoveTransliterator.Anonymous_C0 ());
	        IBM.ICU.Text.Transliterator.RegisterSpecialInverse("Remove", "Null", false);
	    }
	
	    /// <summary>
	    /// Constructs a transliterator.
	    /// </summary>
	    ///
	    public RemoveTransliterator() : base(_ID, null) {
	    }
	
	    /// <summary>
	    /// Implements <see cref="M:IBM.ICU.Text.Transliterator.HandleTransliterate(IBM.ICU.Text.Replaceable, null, System.Boolean)"/>.
	    /// </summary>
	    ///
	    protected internal override void HandleTransliterate(Replaceable text, Transliterator.Position  index,
	            bool incremental) {
	        // Our caller (filteredTransliterate) has already narrowed us
	        // to an unfiltered run. Delete it.
	        text.Replace(index.start, index.limit, "");
	        int len = index.limit - index.start;
	        index.contextLimit -= len;
	        index.limit -= len;
	    }
	}
}
