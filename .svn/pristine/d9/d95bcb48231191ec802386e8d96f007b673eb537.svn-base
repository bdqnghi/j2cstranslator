/*
 *******************************************************************************
 * Copyright (C) 2007, International Business Machines Corporation and         *
 * others. All Rights Reserved.                                                *
 *******************************************************************************
 */
// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/13/10 4:02 PM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
namespace IBM.ICU.Charset
{

    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.IO;
    using System.Runtime.CompilerServices;
    using NUnit.Framework;

    [TestFixture]
    public class DebugUtilitiesTest : TestFmwk
    {


        /// <param name="args"></param>
        public static void Main(String[] args)
        {
            new DebugUtilitiesTest().Run(args);
        }

        [Test]
        public void TestStrings()
        {
            Logln("ICU4C version was " + IBM.ICU.Charset.DebugUtilitiesData.ICU4C_VERSION);
            int typeCount = IBM.ICU.Charset.DebugUtilities.TypeCount();
            if (typeCount == 0)
            {
                Errln("typecount is 0!");
            }
            for (int j = 0; j < typeCount; j++)
            {
                int enumCount = IBM.ICU.Charset.DebugUtilities.EnumCount(j);
                Logln("Type " + j + "/" + typeCount + ": "
                        + IBM.ICU.Charset.DebugUtilities.TypeString(j) + " - enumCount "
                        + enumCount);
                for (int k = 0; k < enumCount; k++)
                {
                    String enumString = IBM.ICU.Charset.DebugUtilities.EnumString(j, k);
                    int enumValue = IBM.ICU.Charset.DebugUtilities.EnumArrayValue(j, k);
                    int enumValueFromString = IBM.ICU.Charset.DebugUtilities.EnumByString(j,
                            enumString);
                    Logln("     Enum " + k + "/" + enumCount + ": " + enumString
                            + " - value " + enumValue + ", value from string:"
                            + enumValueFromString);
                    if (enumValue != k)
                    {
                        Errln("FAIL: Type " + j + "/" + typeCount + ": "
                                + IBM.ICU.Charset.DebugUtilities.TypeString(j) + " -    Enum " + k
                                + "/" + enumCount + ": " + enumString
                                + " -  ERR: value=" + enumValue + " should be " + k);
                    }
                    if (enumValueFromString != k)
                    {
                        Errln("FAIL: Type " + j + "/" + typeCount + ": "
                                + IBM.ICU.Charset.DebugUtilities.TypeString(j) + " -    Enum " + k
                                + "/" + enumCount + ": " + enumString
                                + " -  ERR: enumByString returned="
                                + enumValueFromString + " should be " + k);
                    }
                }
            }
        }
    }
}
