// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/13/10 10:46 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace IBM.ICU.Charset {
	
	using ILOG.J2CsMapping.Collections;
	using ILOG.J2CsMapping.Collections.Generics;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	public class TestDataModule_Constants {
	
	    public class Factory {
	    
	        static internal TestDataModule Get(String baseName, String localeName) {
	            return new ResourceModule(baseName, localeName);
	        }
	    }
	
	    [Serializable]
	    public class DataModuleFormatError : Exception {
	        /// <summary>
	        /// For serialization
	        /// </summary>
	        ///
	        private const long serialVersionUID = 4312521272388482529L;
	    
	        public DataModuleFormatError(String msg) : base(msg) {
	        }
	    
	        // #if defined(FOUNDATION10) || defined(J2SE13)
	        // #else
	        public DataModuleFormatError(String msg, Exception cause) : base(msg, cause) {
	        }
	    
	        public DataModuleFormatError(Exception cause) : base(cause.Message, cause) {
	        }
	        // #endif
	    }
	
	    /// <summary>
	    /// Represents a single test in the module.
	    /// </summary>
	    ///
	    public interface TestData {
	        String GetName();
	    
	        /// <summary>
	        /// Get additional data related to the test data, e.g. DESCRIPTION,
	        /// global settings. Might be null.
	        /// </summary>
	        ///
	        TestDataModule_Constants.DataMap  GetInfo();
	    
	        
	        /// <returns>Iterator<DataMap></returns>
	        IIterator GetSettingsIterator();
	    
	        
	        /// <returns>Iterator<DataMap></returns>
	        IIterator GetDataIterator();
	    }
	
	    /// <summary>
	    /// Map-like interface for accessing key-value pairs by key. If the vaule is
	    /// not found by given key, return null. The behavior is analogous the get()
	    /// method of the Map interface.
	    /// </summary>
	    ///
	    public interface DataMap {
	        // public abstract boolean isDefined(String key);
	        //
	        Object GetObject(String key);
	    
	        String GetString(String key);
	        // public abstract char getChar(String key);
	        // public abstract int getInt(String key);
	        // public abstract byte getByte(String key);
	        // public abstract boolean getBoolean(String key);
	        //
	        // public abstract Object[] getObjectArray(String key);
	        // public abstract String[] getStringArray(String key);
	        // public abstract char[] getCharArray(String key);
	        // public abstract int[] getIntArray(String key);
	        // public abstract byte[] getByteArray(String key);
	        // public abstract boolean[] getBooleanArray(String key);
	    } 
	}
}
