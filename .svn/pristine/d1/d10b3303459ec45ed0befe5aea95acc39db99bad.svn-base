/* 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110104_01     
// 1/4/11 4:11 PM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
namespace Tests
{

    using ILOG.J2CsMapping.Text;
    using NUnit;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.IO;
    using System.Runtime.CompilerServices;
    using ILOG.J2CsMapping.Util;

    /// <summary>
    /// Test CollationElementIterator
    /// Only test normal condition.
    /// </summary>
    ///
    [NUnit.Framework.TestFixture]
    public class CollationElementIteratorTest
    {

        private RuleBasedCollator coll;

        [NUnit.Framework.SetUp]
        protected void SetUp()
        {
            coll = (RuleBasedCollator)ILOG.J2CsMapping.Text.Collator.GetInstance(Locale.US);
        }

        [NUnit.Framework.Test]
        public void TestGetOffset()
        {
            String text = "abc";
            CollationElementIterator iterator = coll
                    .GetCollationElementIterator(text);
            int[] offsets = { 0, 1, 2, 3 };
            int offset = iterator.GetOffset();
            int i = 0;
            NUnit.Framework.Assert.AreEqual(offsets[i++], offset);
            while (offset != text.Length)
            {
                iterator.Next();
                offset = iterator.GetOffset();
                NUnit.Framework.Assert.AreEqual(offsets[i++], offset);
            }
        }

        [NUnit.Framework.Test]
        public void TestNext()
        {
            String text = "abc";
            CollationElementIterator iterator = coll
                    .GetCollationElementIterator(text);
            int[] orders = new int[text.Length];
            int order = iterator.Next();
            int i = 0;
            while (order != CollationElementIterator.NULLORDER)
            {
                orders[i++] = order;
                order = iterator.Next();
            }

            int offset = iterator.GetOffset();
            NUnit.Framework.Assert.AreEqual(text.Length, offset);
            order = iterator.Previous();

            while (order != CollationElementIterator.NULLORDER)
            {
                NUnit.Framework.Assert.AreEqual(orders[--i], order);
                order = iterator.Previous();
            }

            NUnit.Framework.Assert.AreEqual(0, iterator.GetOffset());
        }

        [NUnit.Framework.Test]
        public void TestReset()
        {
            String text = "abc";
            CollationElementIterator iterator = coll
                    .GetCollationElementIterator(text);
            int[] orders = new int[text.Length];
            int order = iterator.Next();
            int i = 0;
            while (order != CollationElementIterator.NULLORDER)
            {
                orders[i++] = order;
                order = iterator.Next();
            }

            int offset = iterator.GetOffset();
            NUnit.Framework.Assert.AreEqual(text.Length, offset);

            iterator.Reset();
            NUnit.Framework.Assert.AreEqual(0, iterator.GetOffset());
        }

        [NUnit.Framework.Test]
        public void TestGetMaxExpansion()
        {
            String text = "cha";
            RuleBasedCollator rbColl = (RuleBasedCollator)ILOG.J2CsMapping.Text.Collator
                    .GetInstance(new Locale("es", "", "TRADITIONAL"));
            CollationElementIterator iterator = rbColl
                    .GetCollationElementIterator(text);
            int order = iterator.Next();
            while (order != CollationElementIterator.NULLORDER)
            {
                NUnit.Framework.Assert.AreEqual(1, iterator.GetMaxExpansion(order));
                order = iterator.Next();
            }

        }

        [NUnit.Framework.Test]
        public void TestPrimaryOrder()
        {
            RuleBasedCollator rbColl = (RuleBasedCollator)ILOG.J2CsMapping.Text.Collator
                    .GetInstance(new Locale("de", "DE"));
            String text = "\u00e6";
            CollationElementIterator iterator = rbColl
                    .GetCollationElementIterator(text);
            int order = iterator.Next();
            int pOrder = CollationElementIterator.PrimaryOrder(order);
            CollationElementIterator iterator2 = rbColl
                    .GetCollationElementIterator("ae");
            int order2 = iterator2.Next();
            int pOrder2 = CollationElementIterator.PrimaryOrder(order2);
            NUnit.Framework.Assert.AreEqual(pOrder, pOrder2);
        }

        [NUnit.Framework.Test]
        public void TestSecondaryOrder()
        {
            RuleBasedCollator rbColl = (RuleBasedCollator)ILOG.J2CsMapping.Text.Collator
                    .GetInstance(new Locale("fr", "FR"));
            String text = "a\u00e0";
            CollationElementIterator iterator = rbColl
                    .GetCollationElementIterator(text);
            int order = iterator.Next();
            int sOrder1 = CollationElementIterator.SecondaryOrder(order);

            order = iterator.Next();
            int sOrder2 = CollationElementIterator.SecondaryOrder(order);

            NUnit.Framework.Assert.AreEqual(sOrder1, sOrder2);
        }

        [NUnit.Framework.Test]
        public void TestTertiaryOrder()
        {
            RuleBasedCollator rbColl = (RuleBasedCollator)ILOG.J2CsMapping.Text.Collator
                    .GetInstance(new Locale("fr", "FR"));
            String text = "abAB";
            CollationElementIterator iterator = rbColl
                    .GetCollationElementIterator(text);
            int order = iterator.Next();
            int tOrder1 = CollationElementIterator.TertiaryOrder(order);
            order = iterator.Next();
            int tOrder2 = CollationElementIterator.TertiaryOrder(order);
            NUnit.Framework.Assert.AreEqual(tOrder1, tOrder2);

            order = iterator.Next();
            tOrder1 = CollationElementIterator.TertiaryOrder(order);
            order = iterator.Next();
            tOrder2 = CollationElementIterator.TertiaryOrder(order);
            NUnit.Framework.Assert.AreEqual(tOrder1, tOrder2);
        }

        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore]
        public void TestSetOffset()
        {
            // Failed in java too
            RuleBasedCollator rbColl = (RuleBasedCollator)ILOG.J2CsMapping.Text.Collator
                    .GetInstance(new Locale("es", "", "TRADITIONAL"));
            String text = "cha";
            CollationElementIterator iterator = rbColl
                    .GetCollationElementIterator(text);
            iterator.SetOffset(1);
            NUnit.Framework.Assert.AreEqual(1, iterator.GetOffset());
        }

        /*
         * Class under test for void setText(java.lang.String)
         */
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore]
        public void TestSetTextString()
        {
            // Failed in java too
            RuleBasedCollator rbColl = (RuleBasedCollator)ILOG.J2CsMapping.Text.Collator
                    .GetInstance(new Locale("es", "", "TRADITIONAL"));
            String text = "caa";
            CollationElementIterator iterator = rbColl
                    .GetCollationElementIterator(text);
            iterator.SetOffset(1);
            NUnit.Framework.Assert.AreEqual(1, iterator.GetOffset());
            iterator.SetText("cha");
            iterator.SetOffset(1);
            NUnit.Framework.Assert.AreEqual(1, iterator.GetOffset());
        }

        /*
         * Class under test for void setText(java.text.CharacterIterator)
         */
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore]
        public void TestSetTextCharacterIterator()
        {
            // Failed in java too
            RuleBasedCollator rbColl = (RuleBasedCollator)ILOG.J2CsMapping.Text.Collator
                    .GetInstance(new Locale("es", "", "TRADITIONAL"));
            String text = "caa";
            CollationElementIterator iterator = rbColl
                    .GetCollationElementIterator(text);
            iterator.SetOffset(1);
            NUnit.Framework.Assert.AreEqual(1, iterator.GetOffset());
            iterator.SetText(new StringCharacterIterator("cha"));
            iterator.SetOffset(1);
            NUnit.Framework.Assert.AreEqual(1, iterator.GetOffset());
        }
    }
}
