// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/1/10 3:36 PM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
namespace ILOG.J2CsMapping.Text
{

    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.IO;
    using System.Runtime.CompilerServices;
    using System.Runtime.Serialization;

    public class AttributedCharacterIterator_Constants
    {

        [Serializable]
        public class Attribute
        {

            public static readonly AttributedCharacterIterator_Constants.Attribute INPUT_METHOD_SEGMENT = new AttributedCharacterIterator_Constants.Attribute(
                    "input_method_segment"); //$NON-NLS-1$

            public static readonly AttributedCharacterIterator_Constants.Attribute LANGUAGE = new AttributedCharacterIterator_Constants.Attribute("language"); //$NON-NLS-1$

            public static readonly AttributedCharacterIterator_Constants.Attribute READING = new AttributedCharacterIterator_Constants.Attribute("reading"); //$NON-NLS-1$

            private String name;

            protected internal Attribute(String name_0)
            {
                this.name = name_0;
            }

            public sealed override bool Equals(Object obj0)
            {
                if (obj0 == null || !(obj0.GetType().Equals(this.GetType())))
                {
                    return false;
                }
                return name.Equals(((AttributedCharacterIterator_Constants.Attribute)obj0).name);
            }

            protected internal String GetName()
            {
                return name;
            }

            public sealed override int GetHashCode()
            {
                return name.GetHashCode();
            }

            protected internal virtual Object ReadResolve()
            {
                if ((Object)this.GetType() != (Object)typeof(Attribute))
                {
                    // text.0C=cannot resolve subclasses
                    throw new IOException("text.0C"); //$NON-NLS-1$
                }
                if (this.Equals(INPUT_METHOD_SEGMENT))
                {
                    return INPUT_METHOD_SEGMENT;
                }
                if (this.Equals(LANGUAGE))
                {
                    return LANGUAGE;
                }
                if (this.Equals(READING))
                {
                    return READING;
                }
                // text.02=Unknown attribute
                throw new IOException("text.02"); //$NON-NLS-1$
            }

            public override String ToString()
            {
                return GetType().FullName + '(' + GetName() + ')';
            }
        }
    }
}
