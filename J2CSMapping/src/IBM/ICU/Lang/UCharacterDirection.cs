// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/2/10 2:05 PM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (C) 1996-2004, International Business Machines Corporation and    
/// others. All Rights Reserved.                                                
/// </summary>
///
namespace IBM.ICU.Lang {
	
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// Enumerated Unicode character linguistic direction constants. Used as return
	/// results from <a href=UCharacter.html>UCharacter</a>
	/// <p>
	/// This class is not subclassable
	/// </p>
	/// </summary>
	///
	/// @stable ICU 2.1
	
	public sealed class UCharacterDirection : IBM.ICU.Lang.UCharacterEnums.ECharacterDirection  {
	
	    // private constructor =========================================
	    // /CLOVER:OFF
	    /// <summary>
	    /// Private constructor to prevent initialisation
	    /// </summary>
	    ///
	    private UCharacterDirection() {
	    }
	
	    // /CLOVER:ON
	
	    /// <summary>
	    /// Gets the name of the argument direction
	    /// </summary>
	    ///
	    /// <param name="dir">direction type to retrieve name</param>
	    /// <returns>directional name</returns>
	    /// @stable ICU 2.1
	    public static String ToString(int dir) {
	        switch (dir) {
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.LEFT_TO_RIGHT:
	            return "Left-to-Right";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.RIGHT_TO_LEFT:
	            return "Right-to-Left";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.EUROPEAN_NUMBER:
	            return "European Number";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.EUROPEAN_NUMBER_SEPARATOR:
	            return "European Number Separator";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.EUROPEAN_NUMBER_TERMINATOR:
	            return "European Number Terminator";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.ARABIC_NUMBER:
	            return "Arabic Number";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.COMMON_NUMBER_SEPARATOR:
	            return "Common Number Separator";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.BLOCK_SEPARATOR:
	            return "Paragraph Separator";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.SEGMENT_SEPARATOR:
	            return "Segment Separator";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.WHITE_SPACE_NEUTRAL:
	            return "Whitespace";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.OTHER_NEUTRAL:
	            return "Other Neutrals";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.LEFT_TO_RIGHT_EMBEDDING:
	            return "Left-to-Right Embedding";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.LEFT_TO_RIGHT_OVERRIDE:
	            return "Left-to-Right Override";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.RIGHT_TO_LEFT_ARABIC:
	            return "Right-to-Left Arabic";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.RIGHT_TO_LEFT_EMBEDDING:
	            return "Right-to-Left Embedding";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.RIGHT_TO_LEFT_OVERRIDE:
	            return "Right-to-Left Override";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.POP_DIRECTIONAL_FORMAT:
	            return "Pop Directional Formatting";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.DIR_NON_SPACING_MARK:
	            return "Non-Spacing Mark";
	        case IBM.ICU.Lang.UCharacterEnums.ECharacterDirection.BOUNDARY_NEUTRAL:
	            return "Boundary Neutral";
	        }
	        return "Unassigned";
	    }
	}
}
