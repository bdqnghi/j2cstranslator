// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/2/10 11:47 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (C) 2001-2007, International Business Machines Corporation and    
/// others. All Rights Reserved.                                                
/// </summary>
///
namespace IBM.ICU.Util {
	
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
	/// A string used as a key in java.util.Hashtable and other collections. It
	/// retains case information, but its equals() and hashCode() methods ignore
	/// case.
	/// </summary>
	///
	/// @stable ICU 2.0
	public class CaseInsensitiveString {
	
	    private String str0;
	
	    private int hash;
	
	    private String folded;
	
	    private static String FoldCase(String foldee) {
	        return IBM.ICU.Lang.UCharacter.FoldCase(foldee, true);
	    }
	
	    private void GetFolded() {
	        if (folded == null) {
	            folded = FoldCase(str0);
	        }
	    }
	
	    /// <summary>
	    /// Constructs an CaseInsentiveString object from the given string
	    /// </summary>
	    ///
	    /// <param name="s">The string to construct this object from</param>
	    /// @stable ICU 2.0
	    public CaseInsensitiveString(String s) {
	        this.hash = 0;
	        this.folded = null;
	        str0 = s;
	    }
	
	    /// <summary>
	    /// returns the underlying string
	    /// </summary>
	    ///
	    /// <returns>String</returns>
	    /// @stable ICU 2.0
	    public String GetString() {
	        return str0;
	    }
	
	    /// <summary>
	    /// Compare the object with this
	    /// </summary>
	    ///
	    /// <param name="o">Object to compare this object with</param>
	    /// @stable ICU 2.0
	    public override bool Equals(Object o) {
	        GetFolded();
	
	        try {
	            CaseInsensitiveString cis = (CaseInsensitiveString) o;
	
	            cis.GetFolded();
	
	            return folded.Equals(cis.folded);
	        } catch (InvalidCastException e) {
	            try {
	                String s = (String) o;
	
	                return folded.Equals(FoldCase(s));
	            } catch (InvalidCastException e2) {
	                return false;
	            }
	        }
	    }
	
	    /// <summary>
	    /// Returns the hashCode of this object
	    /// </summary>
	    ///
	    /// <returns>int hashcode</returns>
	    /// @stable ICU 2.0
	    public override int GetHashCode() {
	        GetFolded();
	
	        if (hash == 0) {
	            hash = folded.GetHashCode();
	        }
	
	        return hash;
	    }
	
	    /// <summary>
	    /// Overrides superclass method
	    /// </summary>
	    ///
	    /// @stable ICU 3.6
	    public override String ToString() {
	        return str0;
	    }
	}
}
