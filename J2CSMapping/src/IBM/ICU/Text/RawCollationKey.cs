// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/2/10 11:30 AM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (C) 1996-2007, International Business Machines Corporation and    
/// others. All Rights Reserved.                                                
/// </summary>
///
namespace IBM.ICU.Text {
	
	using IBM.ICU.Util;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// <p>
	/// Simple class wrapper to store the internal byte representation of a
	/// CollationKey. Unlike the CollationKey, this class do not contain information
	/// on the source string the sort order represents. RawCollationKey is mutable
	/// and users can reuse its objects with the method in
	/// RuleBasedCollator.getRawCollationKey(..).
	/// </p>
	/// <p>
	/// Please refer to the documentation on CollationKey for a detail description on
	/// the internal byte representation. Note the internal byte representation is
	/// always null-terminated.
	/// </p>
	/// <code>
	/// Example of use:<br>
	/// String str[] = {.....};
	/// RuleBasedCollator collator = (RuleBasedCollator)Collator.getInstance();
	/// RawCollationKey key = new RawCollationKey(128);
	/// for (int i = 0; i &lt; str.length; i ++) {
	/// collator.getRawCollationKey(str[i], key);
	/// // do something with key.bytes
	/// }
	/// </code>
	/// <p>
	/// <strong>Note:</strong> Comparison between RawCollationKeys created by
	/// different Collators might return incorrect results. See class documentation
	/// for Collator.
	/// </p>
	/// </summary>
	///
	/// @stable ICU 2.8
	/// <seealso cref="T:IBM.ICU.Text.RuleBasedCollator"/>
	/// <seealso cref="T:IBM.ICU.Text.CollationKey"/>
	public sealed class RawCollationKey : ByteArrayWrapper {
	    // public constructors --------------------------------------------------
	
	    /// <summary>
	    /// Default constructor, internal byte array is null and its size set to 0.
	    /// </summary>
	    ///
	    /// @stable ICU 2.8
	    public RawCollationKey() {
	    }
	
	    /// <summary>
	    /// RawCollationKey created with an empty internal byte array of length
	    /// capacity. Size of the internal byte array will be set to 0.
	    /// </summary>
	    ///
	    /// <param name="capacity">length of internal byte array</param>
	    /// @stable ICU 2.8
	    public RawCollationKey(int capacity) {
	        bytes = new byte[capacity];
	    }
	
	    /// <summary>
	    /// RawCollationKey created, adopting bytes as the internal byte array. Size
	    /// of the internal byte array will be set to 0.
	    /// </summary>
	    ///
	    /// <param name="bytes">byte array to be adopted by RawCollationKey</param>
	    /// @stable ICU 2.8
	    public RawCollationKey(byte[] bytes) {
	        this.bytes = bytes;
	    }
	
	    /// <summary>
	    /// Construct a RawCollationKey from a byte array and size.
	    /// </summary>
	    ///
	    /// <param name="bytesToAdopt">the byte array to adopt</param>
	    /// <param name="size">the length of valid data in the byte array</param>
	    /// <exception cref="IndexOutOfBoundsException">if bytesToAdopt == null and size != 0, or size < 0, or size >bytesToAdopt.length.</exception>
	    /// @stable ICU 2.8
	    public RawCollationKey(byte[] bytesToAdopt, int size) : base(bytesToAdopt, size) {
	    }
	
	    /// <summary>
	    /// Compare this RawCollationKey to another, which must not be null. This
	    /// overrides the inherited implementation to ensure the returned values are
	    /// -1, 0, or 1.
	    /// </summary>
	    ///
	    /// <param name="rhs">the RawCollationKey to compare to.</param>
	    /// <returns>-1, 0, or 1 as this compares less than, equal to, or greater than
	    /// rhs.</returns>
	    /// <exception cref="ClassCastException">if the other object is not a RawCollationKey.</exception>
	    /// @stable ICU 3.2
	    public override int CompareTo(Object rhs) {
	        int result = base.CompareTo((RawCollationKey) rhs);
	        return (result < 0) ? -1 : (result == 0) ? 0 : 1;
	    }
	}
}
