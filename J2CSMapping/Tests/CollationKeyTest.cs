/* 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110104_01     
// 1/4/11 4:11 PM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace Tests {
	
	using ILOG.J2CsMapping.Text;
	using ILOG.J2CsMapping.Util;
	using NUnit;
	
	[NUnit.Framework.TestFixture]
	public class CollationKeyTest {
	
	    
	    /// @tests java.text.CollationKey#compareTo(java.text.CollationKey)
	    [NUnit.Framework.Test]
	    public void Test_compareToLjava_text_CollationKey() {
	        Collator collator = ILOG.J2CsMapping.Text.Collator.GetInstance();
	        collator.SetStrength(ILOG.J2CsMapping.Text.Collator.PRIMARY);
	        CollationKey key1 = collator.GetCollationKey("abc");
	        CollationKey key2 = collator.GetCollationKey("ABC");
	        NUnit.Framework.Assert.AreEqual(0,key1.CompareTo(key2),"Should be equal");
	    }
	
	    
	    /// @tests java.text.CollationKey#compareTo(java.lang.Object)
	    [NUnit.Framework.Test]
	    public void Test_compareToLjava_lang_Object() {
	        // Test for method int
	        // java.text.CollationKey.compareTo(java.lang.Object)
	        Collator collator = ILOG.J2CsMapping.Text.Collator.GetInstance();
	        collator.SetStrength(ILOG.J2CsMapping.Text.Collator.PRIMARY);
	        CollationKey key1 = collator.GetCollationKey("abc");
	        CollationKey key2 = collator.GetCollationKey("ABC");
	        NUnit.Framework.Assert.AreEqual(0,key1.CompareTo(key2),"Should be equal");
	    }
	
	    
	    /// @tests java.text.CollationKey#equals(java.lang.Object)
	    [NUnit.Framework.Test]
	    public void Test_equalsLjava_lang_Object() {
	        Collator collator = ILOG.J2CsMapping.Text.Collator.GetInstance();
	        collator.SetStrength(ILOG.J2CsMapping.Text.Collator.PRIMARY);
	        CollationKey key1 = collator.GetCollationKey("abc");
	        CollationKey key2 = collator.GetCollationKey("ABC");
	        NUnit.Framework.Assert.IsTrue(key1.Equals(key2),"Should be equal");
	    }
	
	    
	    /// @tests java.text.CollationKey#getSourceString()
	    [NUnit.Framework.Test]
	    public void Test_getSourceString() {
	        Collator collator = ILOG.J2CsMapping.Text.Collator.GetInstance();
	        collator.SetStrength(ILOG.J2CsMapping.Text.Collator.PRIMARY);
	        NUnit.Framework.Assert.IsTrue(collator.GetCollationKey("abc")
	                        .GetSourceString() == "abc","Wrong source string1");
	        NUnit.Framework.Assert.IsTrue(collator.GetCollationKey("ABC")
	                        .GetSourceString() == "ABC","Wrong source string2");
	    }
	
	    
	    /// @tests java.text.CollationKey#hashCode()
	    [NUnit.Framework.Test]
	    public void Test_hashCode() {
	        Collator collator = ILOG.J2CsMapping.Text.Collator.GetInstance();
	        collator.SetStrength(ILOG.J2CsMapping.Text.Collator.PRIMARY);
	        CollationKey key1 = collator.GetCollationKey("abc");
	        CollationKey key2 = collator.GetCollationKey("ABC");
	        NUnit.Framework.Assert.IsTrue(key1.GetHashCode() == key2.GetHashCode(),"Should be equal");
	    }
	
	    
	    /// @tests java.text.CollationKey#toByteArray()
	    // FIXME This test fails on Harmony ClassLibrary
	    public void Failing_test_toByteArray() {
	        // Test for method byte [] java.text.CollationKey.toByteArray()
	        Collator collator = ILOG.J2CsMapping.Text.Collator.GetInstance();
	        collator.SetStrength(ILOG.J2CsMapping.Text.Collator.PRIMARY);
	        CollationKey key1 = collator.GetCollationKey("abc");
	        byte[] bytes = key1.ToByteArray();
	        NUnit.Framework.Assert.IsTrue(bytes.Length >= 3,"Not enough bytes");
	
	        try {
	            collator = new RuleBasedCollator("= 1 , 2 ; 3 , 4 < 5 ; 6 , 7");
	        } catch (ParseException e) {
	            NUnit.Framework.Assert.Fail("ParseException");
	            return;
	        }
	        bytes = collator.GetCollationKey("1234567").ToByteArray();
	        /*
	         * CollationElementIterator it =
	         * ((RuleBasedCollator)collator).getCollationElementIterator("1234567");
	         * int order; while ((order = it.next()) !=
	         * CollationElementIterator.NULLORDER) {
	         * System.out.println(Integer.toHexString(order)); } for (int i=0;
	         * i<bytes.length; i+=2) {
	         * System.out.print(Integer.toHexString(bytes[i]) +
	         * Integer.toHexString(bytes[i+1]) + " "); } System.out.println();
	         */
	        byte[] result = new byte[] { 0, 2, 0, 2, 0, 2, 0, 0, 0, 3, 0, 3, 0, 1,
	                0, 2, 0, 2, 0, 0, 0, 4, 0, 4, 0, 1, 0, 1, 0, 2 };
	        // Failed in java too : NUnit.Framework.Assert.IsTrue(ILOG.J2CsMapping.Collections.Arrays.Equals(bytes,result),"Wrong bytes");
	    }
	}
}
