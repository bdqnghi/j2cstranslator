/*
 *******************************************************************************
 * Copyright (C) 2002-2004, International Business Machines Corporation and    *
 * others. All Rights Reserved.                                                *
 *******************************************************************************
 */
// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20101125_01     
// 12/13/10 4:01 PM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace IBM.ICU.Charset {
	
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	using System.Text;
	
	
	public abstract class Quoter {
	    public Quoter() {
	        this.quoting = false;
	        this.output = new StringBuilder();
	    }
	
	    private static bool DEBUG = false;
	
	    protected internal bool quoting;
	
	    protected internal StringBuilder output;
	
	    public virtual void SetQuoting(bool value_ren) {
	        quoting = value_ren;
	    }
	
	    public bool IsQuoting() {
	        return quoting;
	    }
	
	    public void Clear() {
	        quoting = false;
	        output.Length=0;
	    }
	
	    public int Length() {
	        return output.Length;
	    }
	
	    public virtual Quoter Append(String str0) {
	        output.Append(str0);
	        return this;
	    }
	
	    public Quoter Append(int codepoint) {
	        return Append(IBM.ICU.Text.UTF16.ValueOf(codepoint));
	    }
	
	    // warning, allows access to internals
	    public override String ToString() {
	        SetQuoting(false); // finish quoting
	        return output.ToString();
	    }
	
	    /// <summary>
	    /// Implements standard ICU rule quoting
	    /// </summary>
	    ///
	    public class RuleQuoter : Quoter {
	        public RuleQuoter() {
	            this.quoteBuffer = new StringBuilder();
	        }
	
	        private StringBuilder quoteBuffer;
	
	        public override void SetQuoting(bool value_ren) {
	            if (quoting == value_ren)
	                return;
	            if (quoting) { // stop quoting
	                IBM.ICU.Impl.Utility.AppendToRule(output, (int) -1, true, false, quoteBuffer); // close
	                                                                                  // previous
	                                                                                  // quote
	            }
	            quoting = value_ren;
	        }
	
	        public override Quoter Append(String s) {
	            if (IBM.ICU.Charset.Quoter.DEBUG)
	                System.Console.Out.WriteLine("\"" + s + "\"");
	            if (quoting) {
	                IBM.ICU.Impl.Utility.AppendToRule(output, s, false, false, quoteBuffer);
	            } else {
	                output.Append(s);
	            }
	            return this;
	        }
	    }
	}}
